// Generated by CoffeeScript 1.6.3
(function() {
  var Address_Base, FBAInboundClient, FBAInventoryClient, FBAOutboundClient, MWS_FBA_INBOUND, MWS_FBA_INVENTORY, MWS_FBA_OUTBOUND, complex, enums, mws, requests, types, _ref, _ref1, _ref2,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  mws = require('./core');

  MWS_FBA_INBOUND = new mws.Service({
    name: 'Fulfillment',
    group: 'Inbound Shipments',
    path: '/FulfillmentInboundShipment/2010-10-01',
    version: '2010-10-01',
    legacy: false
  });

  MWS_FBA_OUTBOUND = new mws.Service({
    name: 'Fulfillment',
    group: 'Outbound Shipments',
    path: '/FulfillmentOutboundShipment/2010-10-01',
    version: '2010-10-01',
    legacy: false
  });

  MWS_FBA_INVENTORY = new mws.Service({
    name: 'Fulfillment',
    group: 'Inventory',
    path: '/FulfillmentInventory/2010-10-01',
    version: '2010-10-01',
    legacy: false
  });

  complex = {
    DisplayableOrder: (function(_super) {
      __extends(_Class, _super);

      function _Class(name, required, init) {
        this.name = name != null ? name : 'DisplayableOrder';
        this.required = required != null ? required : false;
        this.params = {
          id: new mws.Param('DisplayableOrderId', true),
          dateTime: new mws.Timestamp('DisplayableOrderDateTime', false),
          comment: new mws.Param('DisplayableOrderComment', false)
        };
        if (init != null) {
          this.set(init);
        }
      }

      return _Class;

    })(mws.ComplexParam),
    Address: Address_Base = (function(_super) {
      __extends(Address_Base, _super);

      function Address_Base(name, required, init) {
        this.name = name != null ? name : 'Address';
        this.required = required != null ? required : false;
        this.params = {
          name: new mws.Param('Name', true),
          line1: new mws.Param('Line1', true),
          line2: new mws.Param('Line2', false),
          line3: new mws.Param('Line3', false),
          city: new mws.Param('City', true),
          county: new mws.Param('DistrictOrCounty', false),
          state: new mws.Param('StateOrProvinceCode', true),
          zip: new mws.Param('PostalCode', true),
          country: new mws.Param('CountryCode', true),
          phone: new mws.Param('PhoneNumber', false)
        };
        if (init != null) {
          this.set(init);
        }
      }

      return Address_Base;

    })(mws.ComplexParam),
    DestinationAddress: (function(_super) {
      __extends(_Class, _super);

      function _Class(required, init) {
        _Class.__super__.constructor.call(this, 'DestinationAddress', required, init);
      }

      return _Class;

    })(Address_Base),
    ShipFromAddress: (function(_super) {
      __extends(_Class, _super);

      function _Class(required, init) {
        this.required = required != null ? required : false;
        this.name = 'ShipFromAddress';
        this.params = {
          name: new mws.Param('Name', true),
          line1: new mws.Param('AddressLine1', true),
          line2: new mws.Param('AddressLine2', false),
          city: new mws.Param('City', true),
          county: new mws.Param('DistrictOrCounty', false),
          state: new mws.Param('StateOrProvinceCode', true),
          zip: new mws.Param('PostalCode', true),
          country: new mws.Param('CountryCode', true)
        };
        if (init != null) {
          this.set(init);
        }
      }

      return _Class;

    })(mws.ComplexParam),
    InboundShipmentHeader: (function(_super) {
      __extends(_Class, _super);

      function _Class(required, init) {
        this.required = required != null ? required : false;
        this.name = 'InboundShipmentHeader';
        this.params = {
          shipmentName: new mws.Param('ShipmentName', true),
          shipFromAddress: new complex.ShipFromAddress(true),
          destFCID: new mws.Param('DestinationFulfillmentCenterId', true),
          shipmentStatus: new mws.Param('ShipmentStatus', false),
          labelPrepPref: new mws.Param('LabelPrepPreference', false)
        };
      }

      return _Class;

    })(mws.ComplexParam),
    LineItem: (function(_super) {
      __extends(_Class, _super);

      function _Class(required, init) {
        this.required = required != null ? required : false;
        this.params = {
          comment: new mws.Param('DisplayableComment'),
          giftMessage: new mws.Param('GiftMessage'),
          declaredValue: new mws.Param('PerUnitDeclaredValue.Value'),
          declaredCurrency: new mws.Param('PerUnitDeclaredValue.CurrencyCode'),
          quantity: new mws.Param('Quantity'),
          itemId: new mws.Param('SellerFulfillmentOrderItemId'),
          sku: new mws.Param('SellerSKU')
        };
        if (init != null) {
          this.set(init);
        }
      }

      return _Class;

    })(mws.ComplexParam),
    LineItems: (function(_super) {
      __extends(_Class, _super);

      function _Class(init) {
        _Class.__super__.constructor.call(this, 'Items', 'member');
      }

      _Class.prototype.addItem = function(itemId, sku, quantity, declaredValue, declaredCurrency, giftMessage, comment) {
        if (arguments.length === 1 && typeof itemId === 'object') {
          if (itemId.render != null) {
            return this.value.push(itemId);
          } else {
            return this.value.push(new complex.LineItem(itemId));
          }
        } else {
          return this.value.push(new complex.LineItem({
            itemId: itemId,
            sku: sku,
            quantity: quantity,
            declaredValue: declaredValue,
            declaredCurrency: declaredCurrency,
            giftMessage: giftMessage,
            comment: comment
          }));
        }
      };

      return _Class;

    })(mws.ComplexList),
    InboundShipmentItem: (function(_super) {
      __extends(_Class, _super);

      function _Class(init) {
        this.params = {
          quantity: new mws.Param('QuantityShipped'),
          sku: new mws.Param('SellerSKU')
        };
        if (init != null) {
          this.set(init);
        }
      }

      return _Class;

    })(mws.ComplexParam),
    InboundShipmentItems: (function(_super) {
      __extends(_Class, _super);

      function _Class(required, init) {
        _Class.__super__.constructor.call(this, 'InboundShipmentItems', 'member', required, init);
      }

      _Class.prototype.addItem = function(quantity, sku) {
        if (arguments.length === 1 && typeof quantity === 'object') {
          if (quantity.render != null) {
            this.value.push(itemId);
          } else {
            this.value.push(new complex.InboundShipmentItem(quantity));
          }
        }
        return this.value.push(new complex.InboundShipmentItem({
          quantity: quantity,
          sku: sku
        }));
      };

      return _Class;

    })(mws.ComplexList),
    InboundShipmentPlanRequestItem: (function(_super) {
      __extends(_Class, _super);

      function _Class(init) {
        this.params = {
          quantity: new mws.Param('Quantity'),
          sku: new mws.Param('SellerSKU'),
          asin: new mws.Param('ASIN'),
          condition: new mws.Param('Condition')
        };
        if (init != null) {
          this.set(init);
        }
      }

      return _Class;

    })(mws.ComplexParam),
    InboundShipmentPlanRequestItems: (function(_super) {
      __extends(_Class, _super);

      function _Class(required, init) {
        _Class.__super__.constructor.call(this, 'InboundShipmentPlanRequestItems', 'member', required, init);
      }

      _Class.prototype.addItem = function(quantity, sku, asin, condition) {
        if (arguments.length === 1 && typeof quantity === 'object') {
          if (quantity.render != null) {
            this.value.push(itemId);
          } else {
            this.value.push(new complex.InboundShipmentPlanRequestItem(quantity));
          }
        }
        return this.value.push(new complex.InboundShipmentPlanRequestItem({
          quantity: quantity,
          sku: sku,
          asin: asin,
          condition: condition
        }));
      };

      return _Class;

    })(mws.ComplexList)
  };

  enums = {
    ResponseGroup: (function(_super) {
      __extends(_Class, _super);

      function _Class(options) {
        var _ref;
        if (options == null) {
          options = {};
        }
        _Class.__super__.constructor.call(this, 'ResponseGroup', ['Basic', 'Detailed'], (_ref = options.required) != null ? _ref : false);
      }

      return _Class;

    })(mws.Enum),
    ShippingSpeedCategory: (function(_super) {
      __extends(_Class, _super);

      function _Class(options) {
        var _ref;
        if (options == null) {
          options = {};
        }
        _Class.__super__.constructor.call(this, 'ShippingSpeedCategory', ['Standard', 'Expedited', 'Priority'], (_ref = options.required) != null ? _ref : false);
      }

      return _Class;

    })(mws.Enum),
    ShippingSpeedCategories: (function(_super) {
      __extends(_Class, _super);

      function _Class(options) {
        var _ref;
        if (options == null) {
          options = {};
        }
        _Class.__super__.constructor.call(this, 'ShippingSpeedCategories', 'member', ['Standard', 'Expedited', 'Priority'], (_ref = options.required) != null ? _ref : false);
      }

      return _Class;

    })(mws.EnumList),
    FulfillmentPolicy: (function(_super) {
      __extends(_Class, _super);

      function _Class(options) {
        var _ref;
        if (options == null) {
          options = {};
        }
        _Class.__super__.constructor.call(this, 'FulfillmentPolicy', ['FillOrKill', 'FillAll', 'FillAllAvailable'], (_ref = options.required) != null ? _ref : false);
      }

      return _Class;

    })(mws.Enum)
  };

  types = {
    ServiceStatus: mws.types.ServiceStatus
  };

  requests = {
    inbound: {
      GetServiceStatus: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_INBOUND, 'GetServiceStatus', [], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      CreateInboundShipment: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_INBOUND, 'CreateInboundShipment', [new mws.Param('ShipmentId', true), new complex.InboundShipmentHeader(true), new complex.InboundShipmentItems(true)], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      CreateInboundShipmentPlan: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_INBOUND, 'CreateInboundShipmentPlan', [new mws.Param('LabelPrepPreference', true), new mws.Param(new mws.Param), new complex.ShipFromAddress(true), new mws.Param('InboundShipmentPlanRequestItems', true)], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      ListInboundShipmentItems: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_INBOUND, 'ListInboundShipmentItems', [
            new mws.Param('ShipmentId', {
              required: true
            }), new mws.Timestamp('LastUpdatedAfter'), new mws.Timestamp('LastUpdatedBefore')
          ], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      ListInboundShipmentItemsByNextToken: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_INBOUND, 'ListInboundShipmentItemsByNextToken', [new mws.Param('NextToken', true)], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      ListInboundShipments: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_INBOUND, 'ListInboundShipments', [new mws.ParamList('ShipmentStatusList', 'member'), new mws.ParamList('ShipmentIdList', 'member'), new mws.Timestamp('LastUpdatedAfter'), new mws.Timestamp('LastUpdatedBefore')], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      ListInboundShipmentsByNextToken: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_INBOUND, 'ListInboundShipmentsByNextToken', [new mws.Param('NextToken', true)], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      UpdateInboundShipment: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_INBOUND, 'UpdateInboundShipment', [new mws.Param('ShipmentId', true), new complex.InboundShipmentHeader(true), new complex.InboundShipmentItems(true)], {}, null, init);
        }

        return _Class;

      })(mws.Request)
    },
    outbound: {
      GetServiceStatus: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_OUTBOUND, 'GetServiceStatus', [], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      CancelFulfillmentOrder: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_OUTBOUND, 'CancelFulfillmentOrder', [new mws.Param('SellerFulfillmentOrderId', true)], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      CreateFulfillmentOrder: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_OUTBOUND, 'CreateFulfillmentOrder', [
            new mws.Param('SellerFulfillmentOrderId', true), new enums.ShippingSpeedCategory({
              required: true
            }), new enums.FulfillmentPolicy(), new mws.Param('FulfillmentMethod'), new mws.ParamList('NotificationEmailList', 'member'), new complex.DestinationAddress(), new complex.LineItems()
          ], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      GetFulfillmentOrder: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_OUTBOUND, 'GetFulfillmentOrder', [new mws.Param('SellerFulfillmentOrderId', true)], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      GetFulfillmentPreview: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_OUTBOUND, 'GetFulfillmentPreview', [new complex.Address('Address'), new complex.LineItems('LineItems'), new enums.ShippingSpeedCategories()], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      ListAllFulfillmentOrders: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_OUTBOUND, 'ListAllFulfillmentOrders', [new mws.Timestamp('QueryStartDateTime', true), new mws.ParamList('FulfillmentMethod', 'member')], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      ListAllFulfillmentOrdersByNextToken: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_OUTBOUND, 'ListAllFulfillmentOrdersByNextToken', [new mws.Param('NextToken', true)], {}, null, init);
        }

        return _Class;

      })(mws.Request)
    },
    inventory: {
      GetServiceStatus: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_INVENTORY, 'GetServiceStatus', [], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      ListInventorySupply: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_INVENTORY, 'ListInventorySupply', [new mws.ParamList('SellerSkus', 'member'), new mws.Timestamp('QueryStartDateTime'), new enums.ResponseGroup()], {}, null, init);
        }

        return _Class;

      })(mws.Request),
      ListInventorySupplyByNextToken: (function(_super) {
        __extends(_Class, _super);

        function _Class(init) {
          _Class.__super__.constructor.call(this, MWS_FBA_INVENTORY, 'ListInventorySupplyByNextToken', [new mws.Param('NextToken', true)], {}, null, init);
        }

        return _Class;

      })(mws.Request)
    }
  };

  FBAInboundClient = (function(_super) {
    __extends(FBAInboundClient, _super);

    function FBAInboundClient() {
      _ref = FBAInboundClient.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    FBAInboundClient.prototype.getServiceStatus = function(cb) {
      var _this = this;
      return this.invoke(new requests.inbound.GetServiceStatus(), {}, function(res) {
        var status, _ref1, _ref2;
        status = (_ref1 = (_ref2 = res.result) != null ? _ref2.Status : void 0) != null ? _ref1 : null;
        return cb(status, res);
      });
    };

    FBAInboundClient.prototype.listInboundShipments = function(options, cb) {
      var req;
      if (options.ShipmentStatusList && options.ShipmentIdList) {
        req = new requests.inbound.ListInboundShipments(options);
        return this.invoke(req, {
          nextTokenCall: requests.ListInboundShipmentsByNextToken
        }, function(res) {
          var shipments, _ref1, _ref2;
          shipments = (_ref1 = (_ref2 = res.result) != null ? _ref2.ShipmentData : void 0) != null ? _ref1 : null;
          if (typeof cb === 'function') {
            return cb(shipments, res);
          }
        });
      } else {
        throw 'Special Case: requires either ShipmentStatusList list or ShipmentIdList list be used!';
      }
    };

    FBAInboundClient.prototype.listInboundShipmentItems = function(options, cb) {
      var req;
      if (options.ShipmentId || (options.LastUpdatedAfter && options.LastUpdatedBefore)) {
        req = new requests.inbound.ListInboundShipmentItems(options);
        return this.invoke(req, {
          nextTokenCall: requests.ListInboundShipmentItemsByNextToken
        }, function(res) {
          var items, _ref1, _ref2;
          items = (_ref1 = (_ref2 = res.result) != null ? _ref2.ItemData : void 0) != null ? _ref1 : null;
          if (typeof cb === 'function') {
            return cb(items, res);
          }
        });
      } else {
        throw 'Special Case: requires either ShipmentId number or LastUpdatedAfter and LastUpdatedBefore timestamps be used!';
      }
    };

    return FBAInboundClient;

  })(mws.Client);

  FBAOutboundClient = (function(_super) {
    __extends(FBAOutboundClient, _super);

    function FBAOutboundClient() {
      _ref1 = FBAOutboundClient.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    FBAOutboundClient.prototype.getServiceStatus = function(cb) {
      var _this = this;
      return this.invoke(new requests.outbound.GetServiceStatus(), {}, function(res) {
        var status, _ref2, _ref3;
        status = (_ref2 = (_ref3 = res.result) != null ? _ref3.Status : void 0) != null ? _ref2 : null;
        if (typeof cb === 'function') {
          return cb(status, res);
        }
      });
    };

    return FBAOutboundClient;

  })(mws.Client);

  FBAInventoryClient = (function(_super) {
    __extends(FBAInventoryClient, _super);

    function FBAInventoryClient() {
      _ref2 = FBAInventoryClient.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    FBAInventoryClient.prototype.getServiceStatus = function(cb) {
      var _this = this;
      return this.invoke(new requests.inventory.GetServiceStatus(), {}, function(res) {
        var status, _ref3, _ref4;
        status = (_ref3 = (_ref4 = res.result) != null ? _ref4.Status : void 0) != null ? _ref3 : null;
        if (typeof cb === 'function') {
          return cb(status, res);
        }
      });
    };

    FBAInventoryClient.prototype.listInventorySupply = function(options, cb) {
      var req;
      if (options.SellerSkus && !options.QueryStartDateTime || options.QueryStartDateTime) {
        req = new requests.inventory.ListInventorySupply(options);
        return this.invoke(req, {
          nextTokenCall: requests.ListInventorySupplyByNextToken
        }, function(res) {
          var inventory, _ref3, _ref4;
          inventory = (_ref3 = (_ref4 = res.result) != null ? _ref4.InventorySupplyList : void 0) != null ? _ref3 : null;
          if (typeof cb === 'function') {
            return cb(inventory, res);
          }
        });
      } else {
        throw 'Special Case: requires EXCLUSIVELY either SellerSkus list or QueryStartDateTime timestamp be used!';
      }
    };

    return FBAInventoryClient;

  })(mws.Client);

  module.exports = {
    inbound: {
      service: MWS_FBA_INBOUND,
      requests: requests.inbound,
      Client: FBAInboundClient
    },
    outbound: {
      service: MWS_FBA_OUTBOUND,
      requests: requests.outbound,
      Client: FBAOutboundClient
    },
    inventory: {
      service: MWS_FBA_INVENTORY,
      requests: requests.inventory,
      Client: FBAInventoryClient
    },
    complex: complex,
    types: types,
    requests: requests
  };

}).call(this);
