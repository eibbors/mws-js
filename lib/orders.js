// Generated by CoffeeScript 1.6.3
(function() {
  var MWS_ORDERS, OrdersClient, enums, mws, requests, types, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  mws = require('./core');

  MWS_ORDERS = new mws.Service({
    name: "Orders",
    group: "Order Retrieval",
    path: "/Orders/2011-01-01",
    version: "2011-01-01",
    legacy: false
  });

  enums = {
    OrderStatus: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        var k, v;
        _Class.__super__.constructor.call(this, 'OrderStatus', 'Status', (function() {
          var _ref, _results;
          _ref = types.OrderStatus;
          _results = [];
          for (k in _ref) {
            v = _ref[k];
            _results.push(k);
          }
          return _results;
        })());
      }

      _Class.prototype.render = function(obj) {
        if (obj == null) {
          obj = {};
        }
        if (this.value.Unshipped !== this.value.PartiallyShipped) {
          throw "Unshipped & PartiallyShipped must both be enabled on the OrderStatus Param";
        }
        return _Class.__super__.render.call(this, obj);
      };

      return _Class;

    })(mws.EnumList),
    FulfillmentChannel: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        var k, v;
        _Class.__super__.constructor.call(this, 'FulfillmentChannel', 'Channel', (function() {
          var _ref, _results;
          _ref = types.FulfillmentChannel;
          _results = [];
          for (k in _ref) {
            v = _ref[k];
            _results.push(k);
          }
          return _results;
        })());
      }

      return _Class;

    })(mws.EnumList),
    PaymentMethod: (function(_super) {
      __extends(_Class, _super);

      function _Class() {
        var k, v;
        _Class.__super__.constructor.call(this, 'PaymentMethod', 'Method', (function() {
          var _ref, _results;
          _ref = types.PaymentMethod;
          _results = [];
          for (k in _ref) {
            v = _ref[k];
            _results.push(k);
          }
          return _results;
        })());
      }

      return _Class;

    })(mws.EnumList)
  };

  types = {
    ServiceStatus: mws.types.ServiceStatus,
    FulfillmentChannel: {
      AFN: "Amazon Fulfillment Network",
      MFN: "Merchant's Fulfillment Network"
    },
    OrderStatus: {
      Pending: "Order placed but payment not yet authorized. Not ready for shipment.",
      Unshipped: "Payment has been authorized. Order ready for shipment, but no items shipped yet. Implies PartiallyShipped.",
      PartiallyShipped: "One or more (but not all) items have been shipped. Implies Unshipped.",
      Shipped: "All items in the order have been shipped.",
      Canceled: "The order was canceled.",
      Unfulfillable: "The order cannot be fulfilled. Applies only to Amazon-fulfilled orders not placed on Amazon."
    },
    PaymentMethod: {
      COD: "Cash on delivery",
      CVS: "Convenience store payment",
      Other: "Any payment method other than COD or CVS"
    },
    ShipServiceLevelCategory: {
      Expedited: "Expedited shipping",
      NextDay: "Overnight shipping",
      SecondDay: "Second-day shipping",
      Standard: "Standard shipping"
    }
  };

  requests = {
    GetServiceStatus: (function(_super) {
      __extends(_Class, _super);

      function _Class(init) {
        _Class.__super__.constructor.call(this, MWS_ORDERS, 'GetServiceStatus', [], {}, null, init);
      }

      return _Class;

    })(mws.Request),
    ListOrders: (function(_super) {
      __extends(_Class, _super);

      function _Class(init) {
        _Class.__super__.constructor.call(this, MWS_ORDERS, 'ListOrders', [new mws.Timestamp('CreatedAfter'), new mws.Timestamp('CreatedBefore'), new mws.Timestamp('LastUpdatedAfter'), new mws.Timestamp('LastUpdatedBefore'), new mws.ParamList('MarketplaceId', 'Id', true), new enums.OrderStatus(), new enums.FulfillmentChannel(), new enums.PaymentMethod(), new mws.Param('BuyerEmail'), new mws.Param('SellerOrderId'), new mws.Param('MaxResultsPerPage')], {}, null, init);
      }

      return _Class;

    })(mws.Request),
    ListOrdersByNextToken: (function(_super) {
      __extends(_Class, _super);

      function _Class(init) {
        _Class.__super__.constructor.call(this, MWS_ORDERS, 'ListOrdersByNextToken', [new mws.Param('NextToken', true)], {}, null, init);
      }

      return _Class;

    })(mws.Request),
    GetOrder: (function(_super) {
      __extends(_Class, _super);

      function _Class(init) {
        _Class.__super__.constructor.call(this, MWS_ORDERS, 'GetOrder', [new mws.ParamList('AmazonOrderId', 'Id', true)], {}, null, init);
      }

      return _Class;

    })(mws.Request),
    ListOrderItems: (function(_super) {
      __extends(_Class, _super);

      function _Class(init) {
        _Class.__super__.constructor.call(this, MWS_ORDERS, 'ListOrderItems', [new mws.Param('AmazonOrderId', true)], {}, null, init);
      }

      return _Class;

    })(mws.Request),
    ListOrderItemsByNextToken: (function(_super) {
      __extends(_Class, _super);

      function _Class(init) {
        _Class.__super__.constructor.call(this, MWS_ORDERS, 'ListOrderItemsByNextToken', [new mws.Param('NextToken', true)], {}, null, init);
      }

      return _Class;

    })(mws.Request)
  };

  OrdersClient = (function(_super) {
    __extends(OrdersClient, _super);

    function OrdersClient() {
      _ref = OrdersClient.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    OrdersClient.prototype.getServiceStatus = function(cb) {
      var _this = this;
      return this.invoke(new requests.GetServiceStatus(), {}, function(res) {
        var status, _ref1, _ref2;
        status = (_ref1 = (_ref2 = res.result) != null ? _ref2.Status : void 0) != null ? _ref1 : null;
        return cb(status, res);
      });
    };

    OrdersClient.prototype.listOrders = function(options, cb) {
      var req, _ref1,
        _this = this;
      if ((options.CreatedAfter != null) || (options.LastUpdatedAfter != null)) {
        if (options.MarketplaceId == null) {
          options.MarketplaceId = (_ref1 = this.marketplaceIds) != null ? _ref1 : this.marketplaceId;
        }
        req = new requests.ListOrders(options);
        return this.invoke(req, {
          nextTokenCall: requests.ListOrdersByNextToken
        }, function(res) {
          var orders, _ref2, _ref3, _ref4;
          orders = (_ref2 = (_ref3 = res.result) != null ? (_ref4 = _ref3.Orders) != null ? _ref4.Order : void 0 : void 0) != null ? _ref2 : null;
          return cb(orders, res);
        });
      } else {
        throw 'Special Case: requires AT LEAST ONE OF either CreatedAfter or LastUpdatedAfter timestamps be used!';
      }
    };

    OrdersClient.prototype.listOrdersByNextToken = function(token, cb) {
      var req,
        _this = this;
      req = new requests.ListOrdersByNextToken({
        NextToken: token
      });
      return this.invoke(req, {
        nextTokenCall: requests.ListOrdersByNextToken
      }, function(res) {
        var orders, _ref1, _ref2, _ref3;
        orders = (_ref1 = (_ref2 = res.result) != null ? (_ref3 = _ref2.Orders) != null ? _ref3.Order : void 0 : void 0) != null ? _ref1 : null;
        return cb(orders, res);
      });
    };

    OrdersClient.prototype.getOrder = function(orderId, cb) {
      var req,
        _this = this;
      req = new requests.GetOrder({
        AmazonOrderId: orderId
      });
      return this.invoke(req, {}, function(res) {
        var orders, _ref1, _ref2, _ref3;
        orders = (_ref1 = (_ref2 = res.result) != null ? (_ref3 = _ref2.Orders) != null ? _ref3.Order : void 0 : void 0) != null ? _ref1 : null;
        return cb(orders, res);
      });
    };

    OrdersClient.prototype.listOrderItems = function(orderId, cb) {
      var req,
        _this = this;
      req = new requests.ListOrderItems({
        AmazonOrderId: orderId
      });
      return this.invoke(req, {
        nextTokenCall: requests.ListOrderItemsByNextToken
      }, function(res) {
        var items, _ref1, _ref2, _ref3;
        items = (_ref1 = (_ref2 = res.result) != null ? (_ref3 = _ref2.OrderItems) != null ? _ref3.OrderItem : void 0 : void 0) != null ? _ref1 : null;
        return cb(items, res);
      });
    };

    OrdersClient.prototype.listOrderItemsByNextToken = function(token, cb) {
      var req,
        _this = this;
      req = new requests.ListOrderItemsByNextToken({
        NextToken: token
      });
      return this.invoke(req, {
        nextTokenCall: requests.ListOrderItemsByNextToken
      }, function(res) {
        var items, _ref1, _ref2, _ref3;
        items = (_ref1 = (_ref2 = res.result) != null ? (_ref3 = _ref2.OrderItems) != null ? _ref3.OrderItem : void 0 : void 0) != null ? _ref1 : null;
        return cb(items, res);
      });
    };

    return OrdersClient;

  })(mws.Client);

  module.exports = {
    service: MWS_ORDERS,
    enums: enums,
    requests: requests,
    Client: OrdersClient
  };

}).call(this);
